---

- name: Delete all obsolete users
  ansible.builtin.user:
    name: "{{ item.name }}"
    state: absent
    remove: yes
  loop: "{{ users_rm }}"

- name: Delete obsolete groups
  ansible.builtin.group:
    name: "{{ item.name }}"
    state: absent
  loop: "{{ grps_rm }}"

- name: Create all groups
  ansible.builtin.group:
    state: present
    name: "{{ item.name }}"
    gid: "{{ item.gid | default(omit) }}"
  with_items: "{{ grps }}"

- name: Create all users
  ansible.builtin.user:
    name: "{{ item.name }}"
    uid: "{{ item.uid | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    groups: "{{ item.groups | default(omit) }}"
    home: "{{ item.home | default(omit) }}"
    password: "{{ item.password | default(omit) }}"
    update_password: "{{ update_password | default('on_create') }}"
    shell: "{{ item.shell | default('/bin/bash') }}"
    comment: "{{ item.fullname | default(omit) }}"
    append: "{{ true if item.groups is defined else omit }}"
  loop: "{{ users }}"
  loop_control:
    label:
      - "name: {{ item.name }}"

- name: Add public key to user
  ansible.posix.authorized_key:
    user: "{{ item.name }}"
    state: present
    key: "{{ item.sshkey }}"
  when: item.sshkey is defined and item.sshkey|length > 0
  loop: "{{ users }}"
  loop_control:
    label: "{{ item.name }}"

- name: Setup password less sudo
  ansible.builtin.template:
    src: sudo-nopasswd.j2
    dest: "/etc/sudoers.d/u_{{ item.name }}"
    owner: root
    group: root
    mode: '0440'
  when: item.sudo is defined and item.sudo
  loop: "{{ users }}"
  loop_control:
    label: "{{ item.name }}"
